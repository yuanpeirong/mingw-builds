--- a/gcc/intl.cc	2023-07-27 16:13:04.000000000 +0800
+++ b/gcc/intl.cc	2024-02-14 13:43:07.483162078 +0800
@@ -22,6 +22,12 @@
 #include "coretypes.h"
 #include "intl.h"
 
+#ifdef _WIN32
+#include <string>
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#endif
+
 #ifdef HAVE_LANGINFO_CODESET
 #include <langinfo.h>
 #endif
@@ -55,7 +61,32 @@
   setlocale (LC_ALL, "");
 #endif
 
+#ifdef _WIN32
+  {
+    /* Find the locale directory.
+       TODO: Use config instead of hard-coded dirs. */
+    char buf[MAX_PATH] = {0};
+    GetModuleFileNameA(NULL, buf, MAX_PATH);
+    std::string exe_path = buf;
+
+    /* \libexec\gcc\<triplet>\<version>\cc1.exe */
+    size_t pos = exe_path.rfind(R"(\libexec\gcc\)");
+    if (pos == std::string::npos) {
+      /* \bin\gcc.exe */
+      pos = exe_path.rfind(R"(\bin\)");
+    }
+
+    if (pos == std::string::npos) {
+      (void) bindtextdomain ("gcc", LOCALEDIR);
+    } else {
+      std::string real_prefix = exe_path.substr(0, pos);
+      std::string win32_locale_dir = real_prefix + "/share/locale";
+      (void) bindtextdomain ("gcc", win32_locale_dir.c_str());
+    }
+  }
+#else
   (void) bindtextdomain ("gcc", LOCALEDIR);
+#endif
   (void) textdomain ("gcc");
 
   /* Opening quotation mark.  */
--- a/libcpp/init.cc	2023-07-27 16:13:07.000000000 +0800
+++ b/libcpp/init.cc	2024-02-14 13:42:44.969838638 +0800
@@ -26,6 +26,12 @@
 #include "localedir.h"
 #include "filenames.h"
 
+#ifdef _WIN32
+#include <string>
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#endif
+
 #ifndef ENABLE_CANONICAL_SYSTEM_HEADERS
 #ifdef HAVE_DOS_BASED_FILE_SYSTEM
 #define ENABLE_CANONICAL_SYSTEM_HEADERS 1
@@ -181,8 +187,33 @@
       init_trigraph_map ();
 
 #ifdef ENABLE_NLS
+#ifdef _WIN32
+      {
+        /* Find the locale directory.
+           TODO: Use config instead of hard-coded dirs. */
+        char buf[MAX_PATH] = {0};
+        GetModuleFileNameA(NULL, buf, MAX_PATH);
+        std::string exe_path = buf;
+
+        /* \libexec\gcc\<triplet>\<version>\cc1.exe */
+        size_t pos = exe_path.rfind(R"(\libexec\gcc\)");
+        if (pos == std::string::npos) {
+          /* \bin\gcc.exe */
+          pos = exe_path.rfind(R"(\bin\)");
+        }
+
+        if (pos == std::string::npos) {
+          (void) bindtextdomain (PACKAGE, LOCALEDIR);
+        } else {
+          std::string real_prefix = exe_path.substr(0, pos);
+          std::string win32_locale_dir = real_prefix + "/share/locale";
+          (void) bindtextdomain (PACKAGE, win32_locale_dir.c_str());
+        }
+      }
+#else
        (void) bindtextdomain (PACKAGE, LOCALEDIR);
 #endif
+#endif
     }
 }
 
